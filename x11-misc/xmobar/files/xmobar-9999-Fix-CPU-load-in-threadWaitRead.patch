From b722607332529b8efd01a10e601550525c895c21 Mon Sep 17 00:00:00 2001
From: Sergei Trofimovich <slyfox@gentoo.org>
Date: Fri, 27 Jan 2012 08:41:30 +0300
Subject: [PATCH] Fix 100% CPU load in a threadWaitRead loop

This reverts commit 0964f3327bfe6c2443736353493e420f2fa1bb67:

> Author: Martin Perner <martin@perner.cc>
> Date:   Sat Jan 14 19:42:55 2012 +0100
>
>     Remove dependency for ghc's threaded runtime

We need -threaded because of yet unfixed ghc bug:
    http://hackage.haskell.org/trac/ghc/ticket/4934

Otherwise xmobar eats 100% CPU on ghc-7.4-rc1:

$ strace -p `pidof xmobar`

> select(6, [0 5], [], NULL, {0, 0})      = 0 (Timeout)
> select(6, [0 5], [], NULL, {0, 0})      = 0 (Timeout)
> select(6, [0 5], [], NULL, {0, 0})      = 0 (Timeout)
> select(6, [0 5], [], NULL, {0, 0})      = 0 (Timeout)

Signed-off-by: Sergei Trofimovich <slyfox@gentoo.org>
---
 src/Xmobar.hs |    4 ++--
 xmobar.cabal  |    5 ++++-
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/Xmobar.hs b/src/Xmobar.hs
index 2358a20..8358fb8 100644
--- a/src/Xmobar.hs
+++ b/src/Xmobar.hs
@@ -84,7 +84,7 @@ startLoop xcfg@(XConf _ _ w _ _) vs = do
     sig <- setupSignalHandler
     _ <- forkIO (checker tv [] vs sig `catch`
                    \(SomeException _) -> void (putStrLn "Thread checker failed"))
-    _ <- forkIO (eventer sig `catch`
+    _ <- forkOS (eventer sig `catch`
                    \(SomeException _) -> void (putStrLn "Thread eventer failed"))
     eventLoop tv xcfg sig
   where
@@ -97,7 +97,7 @@ startLoop xcfg@(XConf _ _ w _ _) vs = do
         selectInput       dpy w (exposureMask .|. structureNotifyMask)

         forever $ do
-          nextEvent' dpy e
+          nextEvent dpy e
           ev <- getEvent e
           case ev of
             ConfigureEvent {} -> putMVar signal Reposition

diff --git a/xmobar.cabal b/xmobar.cabal
index dba9f91..608cc09 100644
--- a/xmobar.cabal
+++ b/xmobar.cabal
@@ -86,7 +86,10 @@ executable xmobar
     ghc-prof-options:   -prof -auto-all
 
     if true
-       ghc-options: -funbox-strict-fields -Wall
+       -- -threaded is a workaround around 100% CPU busy loop
+       -- in ghc's threadWait: http://hackage.haskell.org/trac/ghc/ticket/4934
+       -- all known ghc versions behave badly
+       ghc-options: -funbox-strict-fields -Wall -threaded
        extra-libraries: Xrandr
 
     -- Use --disable-optimization configure flag
-- 
1.7.3.4


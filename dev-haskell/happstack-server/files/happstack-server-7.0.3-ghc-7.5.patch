--- happstack-server-7.0.3-orig/src/Happstack/Server/FileServe/BuildingBlocks.hs	2012-07-12 09:56:45.000000000 +1000
+++ happstack-server-7.0.3/src/Happstack/Server/FileServe/BuildingBlocks.hs	2012-07-14 10:49:59.292281085 +1000
@@ -1,4 +1,4 @@
-{-# LANGUAGE DeriveDataTypeable, FlexibleContexts, ScopedTypeVariables, Rank2Types #-}
+{-# LANGUAGE CPP, DeriveDataTypeable, FlexibleContexts, ScopedTypeVariables, Rank2Types #-}
 -- | Build your own file serving functions
 --
 -- If the functions in "Happstack.Server.FileServe" do not quite do
@@ -68,13 +68,22 @@
 import Happstack.Server.Monads      (ServerMonad(askRq), FilterMonad, WebMonad)
 import Happstack.Server.Response    (ToMessage(toResponse), ifModifiedSince, forbidden, ok, seeOther)
 import Happstack.Server.Types       (Length(ContentLength), Request(rqPaths, rqUri), Response(SendFile), RsFlags(rsfLength), nullRsFlags, result, resultBS, setHeader)
+#if !MIN_VERSION_base(4,6,0)
 import Prelude                      hiding (catch)
+#endif
 import System.Directory             (doesDirectoryExist, doesFileExist, getDirectoryContents, getModificationTime)
 import System.FilePath              ((</>), addTrailingPathSeparator, hasDrive, isPathSeparator, joinPath, takeExtension, isValid)
 import System.IO                    (IOMode(ReadMode), hFileSize, hClose, openBinaryFile, withBinaryFile)
 import System.Locale                (defaultTimeLocale)
 import System.Log.Logger            (Priority(DEBUG), logM)
-import System.Time                  (CalendarTime, formatCalendarTime, toCalendarTime, toUTCTime)
+import System.Time                  (CalendarTime, 
+#if (__GLASGOW_HASKELL__>=705)
+                                     ClockTime(..),
+#endif
+                                     formatCalendarTime, toCalendarTime, toUTCTime)
+#if (__GLASGOW_HASKELL__>=705)
+import Data.Time.Clock.POSIX
+#endif
 import           Text.Blaze.Html             ((!))
 import qualified Text.Blaze.Html5            as H
 import qualified Text.Blaze.Html5.Attributes as A
@@ -213,7 +222,13 @@
     do count   <- liftIO $ withBinaryFile fp ReadMode hFileSize -- garbage collection should close this
        modtime <- liftIO $ getModificationTime fp
        rq      <- askRq
-       return $ sendFileResponse contentType fp (Just (toUTCTime modtime, rq)) 0 count
+       return $ sendFileResponse contentType fp (Just (
+#if (__GLASGOW_HASKELL__>=705)
+                                                    (toUTCTime . (\x -> TOD x 0) . toEnum . fromEnum . utcTimeToPOSIXSeconds)
+#else
+                                                    toUTCTime
+#endif
+                                                    modtime, rq)) 0 count
 
 -- | Send the specified file with the specified mime-type using lazy ByteStrings
 --
@@ -230,7 +245,13 @@
        modtime  <- liftIO $ getModificationTime fp
        count    <- liftIO $ hFileSize handle
        rq       <- askRq
-       return $ lazyByteStringResponse contentType contents (Just (toUTCTime modtime, rq)) 0 count
+       return $ lazyByteStringResponse contentType contents (Just (
+#if (__GLASGOW_HASKELL__>=705)
+                                                                (toUTCTime . (\x -> TOD x 0) . toEnum . fromEnum . utcTimeToPOSIXSeconds)
+#else
+                                                                toUTCTime
+#endif
+                                                                   modtime, rq)) 0 count
 
 -- | Send the specified file with the specified mime-type using strict ByteStrings
 --
@@ -246,7 +267,13 @@
        modtime  <- liftIO $ getModificationTime fp
        count    <- liftIO $ withBinaryFile fp ReadMode hFileSize
        rq       <- askRq
-       return $ strictByteStringResponse contentType contents (Just (toUTCTime modtime, rq)) 0 count
+       return $ strictByteStringResponse contentType contents (Just (
+#if (__GLASGOW_HASKELL__>=705)
+                                                                  (toUTCTime . (\x -> TOD x 0) . toEnum . fromEnum . utcTimeToPOSIXSeconds)
+#else
+                                                                  toUTCTime
+#endif
+                                                                     modtime, rq)) 0 count
 
 -- * High-level functions for serving files
 
@@ -608,7 +635,13 @@
             -> IO (FilePath, Maybe CalendarTime, Maybe Integer, EntryKind)
 getMetaData localPath fp =
      do let localFp = localPath </> fp
-        modTime <- (fmap Just . toCalendarTime =<< getModificationTime localFp) `catch`
+        modTime <- (fmap
+#if (__GLASGOW_HASKELL__>=705)
+                     Just . toCalendarTime . (\x -> TOD x 0) . toEnum . fromEnum . utcTimeToPOSIXSeconds
+#else
+                     Just . toCalendarTime
+#endif
+                     =<< getModificationTime localFp) `catch`
                    (\(_ :: IOException) -> return Nothing)
         count <- do de <- doesDirectoryExist localFp
                     if de
--- happstack-server-7.0.3-orig/src/Happstack/Server/Internal/TimeoutSocket.hs	2012-07-12 09:56:45.000000000 +1000
+++ happstack-server-7.0.3/src/Happstack/Server/Internal/TimeoutSocket.hs	2012-07-14 10:49:59.293281112 +1000
@@ -1,4 +1,4 @@
-{-# LANGUAGE BangPatterns, ScopedTypeVariables #-}
+{-# LANGUAGE BangPatterns, CPP, ScopedTypeVariables #-}
 {- |
 -- borrowed from snap-server. Check there periodically for updates.
 -}
@@ -18,7 +18,9 @@
 import           Network.Socket (Socket, ShutdownCmd(..), shutdown)
 import           Network.Socket.SendFile (Iter(..), ByteCount, Offset, sendFileIterWith')
 import           Network.Socket.ByteString (sendAll)
+#if !MIN_VERSION_base(4,6,0)
 import           Prelude hiding (catch)
+#endif
 import           System.IO.Error (isDoesNotExistError)
 import           System.IO.Unsafe (unsafeInterleaveIO)
 

commit 284ee99e3cf8b655ef7e3ba7b20f7b7429bd6c79
Author: RyanGlScott <ryan.gl.scott@ku.edu>
Date:   Sat Jan 3 20:24:18 2015 -0600

    Fix building with base-4.8.0.0

diff --git a/src/Data/Generator.hs b/src/Data/Generator.hs
index 134ad2a..cb3e408 100644
--- a/src/Data/Generator.hs
+++ b/src/Data/Generator.hs
@@ -3,6 +3,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Generator
@@ -35,7 +38,9 @@ module Data.Generator
   , reduceWith
   ) where
 
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Monoid (Monoid, mappend, mempty)
+#endif
 
 import Data.Array
 import Data.Text (Text)
@@ -62,7 +67,10 @@ import Data.Map (Map)
 import Data.List.NonEmpty (NonEmpty)
 import qualified Data.List.NonEmpty as NonEmpty
 -- import Control.Parallel.Strategies (rseq, parMap)
-import Data.Foldable (fold,foldMap)
+import Data.Foldable (fold)
+#if !(MIN_VERSION_base(4,8,0))
+import Data.Foldable (foldMap)
+#endif
 import Data.Semigroup.Reducer
 
 -- | minimal definition 'mapReduce' or 'mapTo'
diff --git a/src/Data/Generator/Combinators.hs b/src/Data/Generator/Combinators.hs
index 27706c9..55b2774 100644
--- a/src/Data/Generator/Combinators.hs
+++ b/src/Data/Generator/Combinators.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Generator.Combinators
@@ -53,11 +56,16 @@ module Data.Generator.Combinators
 import Prelude hiding
   ( mapM_, any, all, elem, filter, concatMap, and, or
   , sum, product, notElem, replicate, cycle, repeat
+#if MIN_VERSION_base(4,8,0)
+  , foldMap
+#endif
   )
 import Control.Applicative
 import Control.Monad (MonadPlus)
 import Data.Generator
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Monoid (Monoid(..))
+#endif
 import Data.Semigroup (Sum(..), Product(..), All(..), Any(..), WrappedMonoid(..))
 import Data.Semigroup.Applicative (Traversal(..))
 import Data.Semigroup.Alternative (Alternate(..))
diff --git a/src/Data/Semigroup/Alt.hs b/src/Data/Semigroup/Alt.hs
index 8e52a57..933bf04 100644
--- a/src/Data/Semigroup/Alt.hs
+++ b/src/Data/Semigroup/Alt.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.Alt
@@ -22,7 +25,9 @@ module Data.Semigroup.Alt
     ) where
 
 import Data.Functor.Plus
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Monoid (Monoid(..))
+#endif
 import Data.Semigroup (Semigroup(..))
 import Data.Semigroup.Reducer (Reducer(..))
 
diff --git a/src/Data/Semigroup/Alternative.hs b/src/Data/Semigroup/Alternative.hs
index 7b113eb..bd22c79 100644
--- a/src/Data/Semigroup/Alternative.hs
+++ b/src/Data/Semigroup/Alternative.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.Alternative
@@ -22,7 +25,9 @@ module Data.Semigroup.Alternative
     ) where
 
 import Control.Applicative
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Monoid (Monoid(..))
+#endif
 import Data.Semigroup (Semigroup(..))
 import Data.Semigroup.Reducer (Reducer(..))
 
diff --git a/src/Data/Semigroup/Applicative.hs b/src/Data/Semigroup/Applicative.hs
index e7f8d62..c2eef64 100644
--- a/src/Data/Semigroup/Applicative.hs
+++ b/src/Data/Semigroup/Applicative.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.Applicative
@@ -23,7 +26,9 @@ module Data.Semigroup.Applicative
     ) where
 
 import Control.Applicative
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Monoid (Monoid(..))
+#endif
 import Data.Semigroup (Semigroup(..))
 import Data.Semigroup.Reducer (Reducer(..))
 
diff --git a/src/Data/Semigroup/Monad.hs b/src/Data/Semigroup/Monad.hs
index 6bf8806..df392dd 100644
--- a/src/Data/Semigroup/Monad.hs
+++ b/src/Data/Semigroup/Monad.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.Monad
@@ -23,8 +26,10 @@ module Data.Semigroup.Monad
     ) where
 
 import Control.Monad (liftM, liftM2)
+#if !(MIN_VERSION_base(4,8,0))
 import Control.Applicative (Applicative(..))
 import Data.Monoid (Monoid(..))
+#endif
 import Data.Semigroup (Semigroup(..))
 import Data.Semigroup.Reducer (Reducer(..))
 
diff --git a/src/Data/Semigroup/MonadPlus.hs b/src/Data/Semigroup/MonadPlus.hs
index bd7aeb2..f0c1931 100644
--- a/src/Data/Semigroup/MonadPlus.hs
+++ b/src/Data/Semigroup/MonadPlus.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.MonadPlus
@@ -22,8 +25,11 @@ module Data.Semigroup.MonadPlus
     ) where
 
 import Control.Monad (MonadPlus(..))
-import Control.Applicative (Applicative(..),Alternative(..))
+import Control.Applicative (Alternative(..))
+#if !(MIN_VERSION_base(4,8,0))
+import Control.Applicative (Alternative(..))
 import Data.Monoid (Monoid(..))
+#endif
 import Data.Semigroup (Semigroup(..))
 import Data.Semigroup.Reducer (Reducer(..))
 
diff --git a/src/Data/Semigroup/Reducer.hs b/src/Data/Semigroup/Reducer.hs
index 0bb0df9..41bdc94 100644
--- a/src/Data/Semigroup/Reducer.hs
+++ b/src/Data/Semigroup/Reducer.hs
@@ -3,6 +3,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.Reducer
@@ -25,14 +28,18 @@ module Data.Semigroup.Reducer
   , Count(..)
   ) where
 
+#if !(MIN_VERSION_base(4,8,0))
 import Control.Applicative
+#endif
 
 import qualified Data.Monoid as Monoid
 import Data.Semigroup as Semigroup
 import Data.Semigroup.Foldable
 import Data.Semigroup.Instances ()
 import Data.Hashable
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Foldable
+#endif
 import Data.FingerTree
 
 import qualified Data.Sequence as Seq
diff --git a/src/Data/Semigroup/Reducer/With.hs b/src/Data/Semigroup/Reducer/With.hs
index 6a8391c..827a49b 100644
--- a/src/Data/Semigroup/Reducer/With.hs
+++ b/src/Data/Semigroup/Reducer/With.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.Reducer.With
@@ -21,10 +24,12 @@ module Data.Semigroup.Reducer.With
 
 import Control.Applicative
 import Data.FingerTree
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Foldable
 import Data.Traversable
-import Data.Hashable
 import Data.Monoid
+#endif
+import Data.Hashable
 import Data.Semigroup.Reducer
 import Data.Semigroup.Foldable
 import Data.Semigroup.Traversable
diff --git a/src/Data/Semigroup/Self.hs b/src/Data/Semigroup/Self.hs
index 493da9d..5014002 100644
--- a/src/Data/Semigroup/Self.hs
+++ b/src/Data/Semigroup/Self.hs
@@ -4,6 +4,9 @@
 {-# LANGUAGE Trustworthy #-}
 #endif
 
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Data.Semigroup.Self
@@ -27,8 +30,10 @@ module Data.Semigroup.Self
     )  where
 
 import Control.Applicative
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Foldable
 import Data.Traversable
+#endif
 import Data.Semigroup
 import Data.Semigroup.Foldable
 import Data.Semigroup.Traversable
diff --git a/src/Data/Semigroup/Union.hs b/src/Data/Semigroup/Union.hs
index 57c4631..4e9d068 100644
--- a/src/Data/Semigroup/Union.hs
+++ b/src/Data/Semigroup/Union.hs
@@ -3,6 +3,10 @@
 #if defined(__GLASGOW_HASKELL__) && __GLASGOW_HASKELL__ >= 702
 {-# LANGUAGE Trustworthy #-}
 #endif
+
+#ifndef MIN_VERSION_base
+#define MIN_VERSION_base(x,y,z) 1
+#endif
 module Data.Semigroup.Union
     ( module Data.Semigroup.Reducer
     -- * Unions of Containers
@@ -37,8 +41,10 @@ import qualified Data.List as List
 
 import Data.Hashable
 import Data.Functor
+#if !(MIN_VERSION_base(4,8,0))
 import Data.Foldable
 import Data.Traversable
+#endif
 import Data.Semigroup
 import Data.Semigroup.Foldable
 import Data.Semigroup.Traversable

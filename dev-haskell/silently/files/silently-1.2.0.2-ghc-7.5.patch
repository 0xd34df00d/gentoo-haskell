--- silently-1.2.0.2-orig/silently.cabal	2012-06-25 04:50:04.000000000 +1000
+++ silently-1.2.0.2/silently.cabal	2012-06-29 02:02:54.968653207 +1000
@@ -62,6 +62,7 @@
     , HUnit
     , directory
     , transformers
+    , deepseq
 
 -- This tests the generic implementation, that should work on all platforms.
 test-suite spec-generic
@@ -79,5 +80,8 @@
 
   build-depends:
       base
+    , silently
+    , HUnit
     , directory
+    , transformers
     , deepseq
--- silently-1.2.0.2-orig/src/System/IO/Silently.hs	2012-06-25 04:50:04.000000000 +1000
+++ silently-1.2.0.2/src/System/IO/Silently.hs	2012-06-29 02:01:22.685496535 +1000
@@ -1,4 +1,4 @@
-{-# LANGUAGE CPP #-}
+{-# LANGUAGE CPP, ScopedTypeVariables #-}
 -- | Need to prevent output to the terminal, a file, or stderr? Need to capture it and use it for
 -- your own means? Now you can, with 'silence' and 'capture'.
 
@@ -7,10 +7,12 @@
   capture, hCapture
 ) where
 
+#if !MIN_VERSION_base(4,6,0)
 import Prelude hiding (catch)
+#endif
 import GHC.IO.Handle (hDuplicate, hDuplicateTo)
 import System.IO
-import Control.Exception (bracket, catch)
+import Control.Exception (bracket, catch, IOException)
 import Control.DeepSeq
 import System.Directory (removeFile,getTemporaryDirectory)
 
@@ -51,7 +53,7 @@
 
 
 getTempOrCurrentDirectory :: IO String
-getTempOrCurrentDirectory = getTemporaryDirectory `catchIOError` (\_ -> return ".")
+getTempOrCurrentDirectory = getTemporaryDirectory `catch` (\(ex :: IOException) -> return ".")
   where
     -- NOTE: We can not use `catchIOError` from "System.IO.Error", it is only
     -- availabel in base >= 4.4.

diff --git a/src/Hans/Device/Tap.hs b/src/Hans/Device/Tap.hs
index b5bd310..d450cc0 100644
--- a/src/Hans/Device/Tap.hs
+++ b/src/Hans/Device/Tap.hs
@@ -9,10 +9,10 @@ import Control.Concurrent (threadWaitRead)
 import Control.Monad (forever)
 import Data.Word (Word8)
 import Foreign.C.String (CString,withCString)
-import Foreign.C.Types (CLong,CSize)
+import Foreign.C.Types
 import Foreign.ForeignPtr (withForeignPtr)
 import Foreign.Ptr (Ptr)
-import System.Posix.Types (Fd)
+import System.Posix.Types
 import qualified Data.ByteString          as S
 import qualified Data.ByteString.Internal as S
 
diff --git a/src/Hans/Utils.hs b/src/Hans/Utils.hs
index a601ca2..d297292 100644
--- a/src/Hans/Utils.hs
+++ b/src/Hans/Utils.hs
@@ -17,7 +17,7 @@ void :: Monad m => m a -> m ()
 void m = m >> return ()
 
 -- | Show a single hex number, padded with a leading 0.
-showPaddedHex :: (Integral a) => a -> ShowS
+showPaddedHex :: (Integral a, Show a) => a -> ShowS
 showPaddedHex x
   | x < 0x10  = showChar '0' . base
   | otherwise = base
diff --git a/src/Network/TCP/Aux/Misc.hs b/src/Network/TCP/Aux/Misc.hs
index 3b24070..2c27fd8 100644
--- a/src/Network/TCP/Aux/Misc.hs
+++ b/src/Network/TCP/Aux/Misc.hs
@@ -44,11 +44,11 @@ import Data.Map as Map
 import Data.List as List
 import Data.Maybe
 import Data.List as List
-import System.IO.Unsafe
+import System.IO.Unsafe as U
 import Control.Exception
 
 debug :: (Monad m) => String -> m a
-debug s = seq (unsafePerformIO $ putStrLn s) return undefined
+debug s = seq (U.unsafePerformIO $ putStrLn s) return undefined
 
 
 bound_ports :: Map SocketID (TCPSocket threadt) -> [Port]

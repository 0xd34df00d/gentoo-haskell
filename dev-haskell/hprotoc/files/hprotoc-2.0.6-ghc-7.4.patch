diff --git a/Text/ProtocolBuffers/ProtoCompile/Parser.hs b/Text/ProtocolBuffers/ProtoCompile/Parser.hs
index 7867427..5b2f72a 100644
--- a/Text/ProtocolBuffers/ProtoCompile/Parser.hs
+++ b/Text/ProtocolBuffers/ProtoCompile/Parser.hs
@@ -1,4 +1,4 @@
-{-# LANGUAGE BangPatterns #-}
+{-# LANGUAGE BangPatterns, CPP #-}
 -- | This "Parser" module takes a filename and its contents as a
 -- bytestring, and uses Lexer.hs to make a stream of tokens that it
 -- parses. No IO is performed and the error function is not used.
@@ -74,7 +74,12 @@ import Text.ParserCombinators.Parsec.Pos(newPos)
 
 default ()
 
+
+#if MIN_VERSION_parsec(3,0,0)
+type P st = GenParser Lexed st
+#else
 type P = GenParser Lexed
+#endif
 
 parseProto :: String -> ByteString -> Either ParseError D.FileDescriptorProto
 parseProto filename fileContents = do
@@ -590,7 +595,7 @@ cEncode = concatMap one where
         | otherwise = '\\':(showOct x "")
   sl c = ['\\',c]
 
-showRF :: (RealFloat a) => a -> String
+showRF :: (RealFloat a, Show a) => a -> String
 showRF x | isNaN x = "nan"
          | isInfinite x = if 0 < x then "inf" else "-inf"
          | otherwise = show x
diff --git a/hprotoc.cabal b/hprotoc.cabal
index c29ebd5..0072fb4 100644
--- a/hprotoc.cabal
+++ b/hprotoc.cabal
@@ -38,7 +38,7 @@ Executable hprotoc
                    filepath >= 1.1.0.0,
                    haskell-src-exts >= 1.7.0,
                    mtl,
-                   parsec < 3,
+                   parsec,
                    utf8-string
 
   if flag(small_base)

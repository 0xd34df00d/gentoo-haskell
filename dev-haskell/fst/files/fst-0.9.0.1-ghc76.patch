diff --git a/FST/FileImport.hs b/FST/FileImport.hs
index 81be23e..017beb2 100644
--- a/FST/FileImport.hs
+++ b/FST/FileImport.hs
@@ -7,18 +7,19 @@
    * Lines         : 25                                         *
    **************************************************************
 -}
-
+{-# LANGUAGE CPP #-}
 module FST.FileImport (open,saveToFile) where
-import System.IO.Error (try)
+
+import Control.Exception (try, IOException)
 
 open :: FilePath -> IO (Either String String)
-open file = do res <- try (readFile file)
+open file = do res <- (try :: IO a -> IO (Either IOException a)) (readFile file)
 	       case res of
 	        Right res -> return $ Right res
 	        Left res  -> return $ Left $ "\nError:\tUnable to open \"" ++ file ++"\".\n"
 
 saveToFile :: FilePath -> String -> IO (Either String ())
-saveToFile file str = do res <- try (writeFile file str)
+saveToFile file str = do res <- (try :: IO a -> IO (Either IOException a)) (writeFile file str) 
 	                 case res of
 	                  Right res -> return $ Right ()
 	                  Left  res -> return $ Left $ "\nError:\tUnable to save to \"" ++ file ++"\".\n"
diff --git a/FST/TransducerInterface.hs b/FST/TransducerInterface.hs
index c3eacb1..8c0d0f4 100644
--- a/FST/TransducerInterface.hs
+++ b/FST/TransducerInterface.hs
@@ -44,7 +44,7 @@ import FST.RRegTypes
 import FST.RunTransducer
 import FST.Transducer
 import FST.TransducerTypes
-import System.IO.Error (try)
+import Control.Exception (try, IOException)
 import qualified FST.DeterministicT as D
 import qualified FST.LBFT as L
 import qualified FST.MinimalTBrzozowski as M
@@ -70,7 +70,7 @@ numberOfTransitions transducer = sum [length (transitionList transducer s) |
 
 load :: FilePath -> IO (Either String (Transducer String))
 load file
- = do res <- try (readFile file)
+ = do res <- (try :: IO a -> IO (Either IOException a)) (readFile file)
       case res of
        Right str -> return $ Right (read str)
        Left  _   -> return $ Left $
@@ -78,7 +78,7 @@ load file
 
 save :: FilePath -> Transducer String -> IO (Either String ())
 save file auto
- = do res <- try (writeFile file $ show auto)
+ = do res <- (try :: IO a -> IO (Either IOException a)) (writeFile file $ show auto)
       case res of
        Right _ -> return $ Right ()
        Left  _   -> return $ Left $

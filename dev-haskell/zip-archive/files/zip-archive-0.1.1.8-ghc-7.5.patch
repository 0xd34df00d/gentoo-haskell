--- zip-archive-0.1.1.8-orig/zip-archive.cabal	2012-04-06 12:06:46.000000000 +1000
+++ zip-archive-0.1.1.8/zip-archive.cabal	2012-05-19 16:02:30.870970364 +1000
@@ -27,6 +27,8 @@
   else
     Build-depends:   base < 3
   Build-depends:     binary, zlib, filepath, directory, bytestring >= 0.9.0, array, mtl, utf8-string >= 0.3.1, old-time, digest >= 0.0.0.1
+  if impl( ghc >= 7.5)
+    Build-depends:   time
   Exposed-modules:   Codec.Archive.Zip
   Hs-Source-Dirs:    .
   Ghc-Options:       -Wall
--- zip-archive-0.1.1.8-orig/Codec/Archive/Zip.hs	2012-04-06 12:06:46.000000000 +1000
+++ zip-archive-0.1.1.8/Codec/Archive/Zip.hs	2012-05-19 15:34:23.106175163 +1000
@@ -73,6 +73,10 @@
 import System.Posix.Files ( setFileTimes )
 #endif
 
+#if (__GLASGOW_HASKELL__>=705)
+import Data.Time.Clock.POSIX ( utcTimeToPOSIXSeconds )
+#endif
+
 -- from bytestring
 import qualified Data.ByteString.Lazy as B
 
@@ -199,7 +203,12 @@
   contents <- if isDir
                  then return B.empty
                  else B.readFile path
+#if (__GLASGOW_HASKELL__>=705)
+  modUTCTime <- getModificationTime path
+  let modEpochTime = (toEnum . fromEnum . utcTimeToPOSIXSeconds) modUTCTime
+#else
   (TOD modEpochTime _) <- getModificationTime path
+#endif
   let entry = toEntry path' modEpochTime contents
   when (OptVerbose `elem` opts) $ do
     let compmethod = case eCompressionMethod entry of

In newer GHC versions than 6.6.1 Data.ByteString.Lazy exports
interesperse, which results in ambigious occurence with
Data.List.intersperce. This patch qualifies the Data.List.intersperse
usage.

--

diff -rN -u old-HaXml-1.19.1/src/Text/XML/HaXml/ByteStringPP.hs new-HaXml-1.19.1/src/Text/XML/HaXml/ByteStringPP.hs
--- old-HaXml-1.19.1/src/Text/XML/HaXml/ByteStringPP.hs	2008-01-01 20:30:39.000000000 +0100
+++ new-HaXml-1.19.1/src/Text/XML/HaXml/ByteStringPP.hs	2008-01-01 20:30:39.000000000 +0100
@@ -196,9 +196,9 @@
 contentspec (ContentSpec c)    = cp c
 --contentspec (ContentPE p cs)   = peref p
 cp (TagName n m)       = text n <> modifier m
-cp (Choice cs m)       = parens (hcat (intersperse (text "|") (Prelude.map cp cs))) <>
+cp (Choice cs m)       = parens (hcat (Data.List.intersperse (text "|") (Prelude.map cp cs))) <>
                            modifier m
-cp (Seq cs m)          = parens (hcat (intersperse (text ",") (Prelude.map cp cs))) <>
+cp (Seq cs m)          = parens (hcat (Data.List.intersperse (text ",") (Prelude.map cp cs))) <>
                            modifier m
 --cp (CPPE p c)          = peref p
 modifier None          = empty
@@ -207,7 +207,7 @@
 modifier Plus          = text "+"
 mixed  PCDATA          = text "(#PCDATA)"
 mixed (PCDATAplus ns)  = text "(#PCDATA |" <+>
-                         hcat (intersperse (text "|") (Prelude.map text ns)) <>
+                         hcat (Data.List.intersperse (text "|") (Prelude.map text ns)) <>
                          text ")*"
 
 attlistdecl (AttListDecl n ds) = text "<!ATTLIST" <+> text n <+>
@@ -226,8 +226,8 @@
 enumeratedtype (NotationType n)= notationtype n
 enumeratedtype (Enumeration e) = enumeration e
 notationtype ns                = text "NOTATION" <+>
-                                 parens (hcat (intersperse (text "|") (Prelude.map text ns)))
-enumeration ns                 = parens (hcat (intersperse (text "|") (Prelude.map nmtoken ns)))
+                                 parens (hcat (Data.List.intersperse (text "|") (Prelude.map text ns)))
+enumeration ns                 = parens (hcat (Data.List.intersperse (text "|") (Prelude.map nmtoken ns)))
 defaultdecl  REQUIRED          = text "#REQUIRED"
 defaultdecl  IMPLIED           = text "#IMPLIED"
 defaultdecl (DefaultTo a f)    = maybe (const (text "#FIXED")) f <+> attvalue a


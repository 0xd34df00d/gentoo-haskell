Fixes the following build failure:

[1 of 2] Compiling Data.Algebra.Boolean ( src/Data/Algebra/Boolean.hs, dist/build/Data/Algebra/Boolean.o )

src/Data/Algebra/Boolean.hs:125:20:
    Could not deduce (Num a) arising from the literal `0'
    from the context (Bits a)
      bound by the instance declaration
      at src/Data/Algebra/Boolean.hs:123:10-38
    Possible fix:
      add (Num a) to the context of the instance declaration
    In the first argument of `Bitwise', namely `0'
    In the expression: Bitwise 0
    In an equation for `false': false = Bitwise 0
diff --git a/src/Data/Algebra/Boolean.hs b/src/Data/Algebra/Boolean.hs
index 46481fc..0cae046 100644
--- a/src/Data/Algebra/Boolean.hs
+++ b/src/Data/Algebra/Boolean.hs
@@ -120,7 +120,7 @@ newtype Bitwise a = Bitwise {getBits :: a}
                   deriving (Num, Bits, Eq, Ord, Bounded, Enum, Show, Read, Real,
                             Integral, Typeable, Data, Ix, Storable, PrintfArg)
 
-instance Bits a => Boolean (Bitwise a) where
+instance (Bits a, Num a) => Boolean (Bitwise a) where
   true   = not false 
   false  = Bitwise 0 
   not    = Bitwise . complement . getBits

--- generic-deriving-1.4.0-orig/generic-deriving.cabal	2013-01-19 22:46:39.004243557 +1100
+++ generic-deriving-1.4.0/generic-deriving.cabal	2013-01-19 22:46:39.000243489 +1100
@@ -23,7 +23,7 @@
 stability:              experimental
 build-type:             Simple
 cabal-version:          >= 1.6
-tested-with:            GHC == 7.0.3, GHC == 7.2.1, GHC == 7.4.1, GHC == 7.6.1
+tested-with:            GHC == 7.0.3, GHC == 7.2.1, GHC == 7.4.1, GHC == 7.6.1, GHC == 7.7.20130117
 extra-source-files:     examples/Examples.hs
 
 source-repository head
@@ -47,7 +47,7 @@
 
                         Generics.Deriving.TH
                         
-  build-depends:        base < 5, template-haskell >=2.4 && <2.9
+  build-depends:        base < 5, template-haskell >=2.4 && <2.10
   if impl(ghc > 7.0)
     build-depends:      ghc-prim < 1
 
--- generic-deriving-1.4.0-orig/src/Generics/Deriving/TH.hs	2013-01-19 22:48:45.566418954 +1100
+++ generic-deriving-1.4.0/src/Generics/Deriving/TH.hs	2013-01-19 22:48:45.576419126 +1100
@@ -108,7 +108,11 @@
   i <- reify t
   let typ q = foldl (\a -> AppT a . VarT . tyVarBndrToName) (ConT q) 
                 (typeVariables i)
+#if __GLASGOW_HASKELL__ >= 707
+  let tyIns = TySynInstD ''Rep (fmap (TySynEqn [typ (genRepName 0 t)]) [typ t])
+#else
   let tyIns = TySynInstD ''Rep [typ t] (typ (genRepName 0 t))
+#endif
   fcs <- mkFrom t 1 0 t
   tcs <- mkTo   t 1 0 t
   liftM (:[]) $

--- doctest-0.5.2-orig/doctest.cabal	2012-01-17 00:16:27.000000000 +1100
+++ doctest-0.5.2/doctest.cabal	2012-02-27 00:54:42.673191586 +1100
@@ -36,15 +36,15 @@
     , HaddockBackend.Markup
     , DocTest
   build-depends:
-      base        >= 4.0  && < 4.5
-    , ghc         >= 6.12 && < 7.4
+      base        >= 4.0  && < 4.6
+    , ghc         >= 6.12 && < 7.6
     , directory
     , containers
     , process
     , ghc-paths   == 0.1.*
     , HUnit       == 1.2.*
   if impl(ghc >= 7.2)
-    build-depends: haddock >= 2.9.4 && < 2.10
+    build-depends: haddock >= 2.9.4 && < 2.11
   else
     build-depends: haddock >= 2.8 && <= 2.9.2
 
@@ -62,14 +62,14 @@
     , HaddockBackend.Markup
     , DocTest
   build-depends:
-      base        >= 4.0  && < 4.5
-    , ghc         >= 6.12 && < 7.4
+      base        >= 4.0  && < 4.6
+    , ghc         >= 6.12 && < 7.6
     , directory
     , containers
     , process
     , ghc-paths   == 0.1.*
     , HUnit       == 1.2.*
   if impl(ghc >= 7.2)
-    build-depends: haddock >= 2.9.4 && < 2.10
+    build-depends: haddock >= 2.9.4 && < 2.11
   else
     build-depends: haddock >= 2.8 && <= 2.9.2
--- doctest-0.5.2-orig/src/HaddockBackend/Markup.hs	2012-01-17 00:16:27.000000000 +1100
+++ doctest-0.5.2/src/HaddockBackend/Markup.hs	2012-02-27 01:24:00.756145923 +1100
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 module HaddockBackend.Markup (examplesFromInterface) where
 
 import Name (Name)
@@ -28,6 +29,15 @@
         extractFromExportItem _ = []
     fromDeclarations = fromDeclMap $ ifaceRnDocMap interface
 
+#if MIN_VERSION_haddock(2,10,0)
+fromDeclMap :: Map Name (Doc DocName) -> [[Example]]
+fromDeclMap docMap = concatMap docName $ Map.elems docMap
+
+docName :: Doc name -> [[Example]]
+docName declDoc = [argsExamples]
+  where
+    argsExamples = extract declDoc
+#else
 fromDeclMap :: Map Name (DocForDecl DocName) -> [[Example]]
 fromDeclMap docMap = concatMap docForDeclName $ Map.elems docMap
 
@@ -36,6 +46,7 @@
   where
     declExamples = extractFromMap argsDoc
     argsExamples = maybe [] extract declDoc
+#endif
 
 extractFromMap :: Map key (Doc name) -> [[Example]]
 extractFromMap m = map extract $ Map.elems m

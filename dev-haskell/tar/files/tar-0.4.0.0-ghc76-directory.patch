diff --git a/Codec/Archive/Tar/Pack.hs b/Codec/Archive/Tar/Pack.hs
index 8e43091..eee4347 100644
--- a/Codec/Archive/Tar/Pack.hs
+++ b/Codec/Archive/Tar/Pack.hs
@@ -1,3 +1,4 @@
+{-# LANGUAGE CPP #-}
 -----------------------------------------------------------------------------
 -- |
 -- Module      :  Codec.Archive.Tar
@@ -28,12 +29,25 @@ import qualified System.FilePath as FilePath.Native
 import System.Directory
          ( getDirectoryContents, doesDirectoryExist, getModificationTime
          , Permissions(..), getPermissions )
+#if (__GLASGOW_HASKELL__>=705)
+import Data.Time.Clock.POSIX
+#else
 import System.Time
          ( ClockTime(..) )
+#endif
+
 import System.IO
          ( IOMode(ReadMode), openBinaryFile, hFileSize )
 import System.IO.Unsafe (unsafeInterleaveIO)
 
+getModificationTimeEpoch :: FilePath -> IO EpochTime
+#if MIN_VERSION_directory(1,2,0)
+getModificationTimeEpoch f = getModificationTime f >>= return . round . utcTimeToPOSIXSeconds
+#else
+getModificationTimeEpoch f = getModificationTime f >>= \(TOD a _) -> return $! fromIntegral a
+#endif
+
+
 -- | Creates a tar archive from a list of directory or files. Any directories
 -- specified will have their contents included recursively. Paths in the
 -- archive will be relative to the given base directory.
@@ -169,6 +183,4 @@ recurseDirectories base (dir:dirs) = unsafeInterleaveIO $ do
     ignore _          = False
 
 getModTime :: FilePath -> IO EpochTime
-getModTime path = do
-  (TOD s _) <- getModificationTime path
-  return $! fromIntegral s
+getModTime path = getModificationTimeEpoch path
diff --git a/tar.cabal b/tar.cabal
index e748b07..d59584a 100644
--- a/tar.cabal
+++ b/tar.cabal
@@ -24,8 +24,12 @@ source-repository head
   location: http://code.haskell.org/tar/
 
 library
+  if (impl(ghc > 7.6))
+    build-depends: time
+  else
+    build-depends: old-time
   build-depends: base >= 3 && < 5, filepath,
-                 directory, old-time, bytestring
+                 directory, bytestring
 
   exposed-modules:
     Codec.Archive.Tar

--- blaze-textual-0.2.0.5-orig/blaze-textual.cabal	2011-11-18 07:12:35.000000000 +1100
+++ blaze-textual-0.2.0.5/blaze-textual.cabal	2011-12-20 12:06:02.263697957 +1100
@@ -67,7 +67,7 @@
 
   if impl(ghc >= 6.11)
     cpp-options: -DINTEGER_GMP
-    build-depends: integer-gmp >= 0.2 && < 0.4
+    build-depends: integer-gmp >= 0.2 && < 0.5
 
   if impl(ghc >= 6.9) && impl(ghc < 6.11)
     cpp-options: -DINTEGER_GMP
--- blaze-textual-0.2.0.5-orig/tests/QC.hs	2011-11-18 07:12:35.000000000 +1100
+++ blaze-textual-0.2.0.5/tests/QC.hs	2011-12-20 12:08:18.636303380 +1100
@@ -9,7 +9,7 @@
 import qualified Data.ByteString.Char8 as B
 
 -- Integral values should be rendered exactly as Haskell does.
-t_integral :: Integral a => a -> a -> Bool
+t_integral :: (Integral a, Show a) => a -> a -> Bool
 t_integral _ i = toByteString (integral i) == B.pack (show i)
 
 -- This package doesn't render floating point numbers exactly as

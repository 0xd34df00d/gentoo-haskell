--- JSONb-1.0.7-orig/JSONb.cabal	2011-10-23 15:50:59.000000000 +1100
+++ JSONb-1.0.7/JSONb.cabal	2012-02-09 15:47:16.335271501 +1100
@@ -36,7 +36,7 @@
                               , containers
                               , utf8-string >= 0.3
                               , bytestring >= 0.9
-                              , attoparsec >= 0.8
+                              , attoparsec >= 0.10
                               , bytestring-nums >= 0.3.1
                               , bytestring-trie >= 0.1.4
   exposed-modules             : Text.JSONb
@@ -63,7 +63,7 @@
                               , containers
                               , utf8-string >= 0.3
                               , bytestring >= 0.9
-                              , attoparsec >= 0.8
+                              , attoparsec >= 0.10
                               , bytestring-nums >= 0.3.1
                               , bytestring-trie >= 0.1.4
   extensions                  : FlexibleInstances
--- JSONb-1.0.7-orig/Text/JSONb/Decode.hs	2011-10-23 15:50:59.000000000 +1100
+++ JSONb-1.0.7/Text/JSONb/Decode.hs	2012-02-09 18:24:05.623669275 +1100
@@ -24,8 +24,9 @@
 import Data.Attoparsec (eitherResult)
 import Data.Attoparsec.Char8 ( choice, char, Parser, option, takeWhile1,
                                takeWhile, skipMany, satisfy, signed,
-                               decimal, Result(..)                       )
+                               decimal                                   )
 import qualified Data.Attoparsec.Char8 as Attoparsec
+import qualified Data.Attoparsec.Types as AttoparsecT
 import Data.ByteString.Nums.Careless
 
 import Text.JSONb.Simple
@@ -45,9 +46,9 @@
  -}
 break                       ::  ByteString -> (Either String JSON, ByteString)
 break bytes                  =  case Attoparsec.parse json bytes of
-  Done remainder result     ->  (Right result, remainder)
-  Fail _ _ s                ->  (Left s, bytes)
-  Partial _                 ->  (Left "Partial", bytes)
+  AttoparsecT.Done remainder result     ->  (Right result, remainder)
+  AttoparsecT.Fail _ _ s                ->  (Left s, bytes)
+  AttoparsecT.Partial _                 ->  (Left "Partial", bytes)
 
 
 {-| Tries to parse any JSON literal.

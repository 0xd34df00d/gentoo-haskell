Tue Jan 11 09:59:07 EET 2011  Ivan.Miljenovic@gmail.com
  * Update to polyparse-1.5
  Now has a working discard implementation, but bracket still needs to
  be re-defined.
diff -rN -u old-graphviz/Data/GraphViz/Parsing.hs new-graphviz/Data/GraphViz/Parsing.hs
--- old-graphviz/Data/GraphViz/Parsing.hs	2011-05-22 15:22:09.393727188 +0300
+++ new-graphviz/Data/GraphViz/Parsing.hs	2011-05-22 15:22:10.074718675 +0300
@@ -29,7 +29,6 @@
     , runParser'
       -- * Convenience parsing combinators.
     , bracket
-    , discard
     , onlyBool
     , quotelessString
     , stringBlock
@@ -78,7 +77,7 @@
 
 import Data.GraphViz.Util
 
-import Text.ParserCombinators.Poly.Lazy hiding (bracket, discard)
+import Text.ParserCombinators.Poly.Lazy hiding (bracket, empty)
 import Data.Char( digitToInt
                 , isDigit
                 , isSpace
@@ -273,18 +272,6 @@
                              (close
                               `adjustErr` ("Missing closing bracket:\n\t"++))
 
-infixl 3 `discard`
-
--- | @x `discard` y@ parses both x and y, but discards the result of y.
---
---   The definition of @discard@ defined in Polyparse is too strict
---   and prevents backtracking.  This should be fixed in the next
---   release after 1.4.
-discard :: Parse a -> Parse b -> Parse a
-pa `discard` pb = do a <- pa
-                     pb
-                     return a
-
 parseAndSpace   :: Parse a -> Parse a
 parseAndSpace p = p `discard` allWhitespace'
 
diff -rN -u old-graphviz/graphviz.cabal new-graphviz/graphviz.cabal
--- old-graphviz/graphviz.cabal	2011-05-22 15:22:09.392727201 +0300
+++ new-graphviz/graphviz.cabal	2011-05-22 15:22:10.061718837 +0300
@@ -61,7 +61,7 @@
                            process,
                            fgl == 5.4.*,
                            filepath,
-                           polyparse == 1.4.*,
+                           polyparse == 1.5.*,
                            pretty,
                            bytestring == 0.9.*,
                            colour == 2.3.*,

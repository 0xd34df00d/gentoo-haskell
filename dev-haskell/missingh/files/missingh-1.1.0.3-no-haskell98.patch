diff --git a/MissingH.cabal b/MissingH.cabal
index 5eb650b..3700331 100644
--- a/MissingH.cabal
+++ b/MissingH.cabal
@@ -89,7 +89,7 @@ Library
    ScopedTypeVariables
 
  Build-Depends: network, parsec, base,
-               haskell98, mtl, HUnit, regex-compat,
+               mtl, HUnit, regex-compat,
                filepath,
                hslogger
  If flag(splitBase)
diff --git a/src/Data/Hash/MD5.lhs b/src/Data/Hash/MD5.lhs
index 44a5ef2..f865724 100644
--- a/src/Data/Hash/MD5.lhs
+++ b/src/Data/Hash/MD5.lhs
@@ -15,9 +15,9 @@
 > module Data.Hash.MD5 (md5,  md5s,  md5i,
 >             MD5(..), ABCD(..), Zord64, Str(..), BoolList(..), WordList(..)) where
 
-> import Char
-> import Bits
-> import Word
+> import Data.Char
+> import Data.Bits
+> import Data.Word
 
 
 Nasty kludge to create a type Zord64 which is really a Word64 but works
diff --git a/src/Data/Hash/MD5/Zord64_HARD.lhs b/src/Data/Hash/MD5/Zord64_HARD.lhs
index bb300c2..a4d7e7e 100644
--- a/src/Data/Hash/MD5/Zord64_HARD.lhs
+++ b/src/Data/Hash/MD5/Zord64_HARD.lhs
@@ -1,8 +1,8 @@
 >-- #hide
 > module Data.Hash.MD5.Zord64_HARD (Zord64) where
 
-> import Word
-> import Bits
+> import Data.Word
+> import Data.Bits
 
 > data Zord64 = W64 {lo,hi::Word32} deriving (Eq, Ord, Bounded)
 
diff --git a/src/Data/MIME/Types.hs b/src/Data/MIME/Types.hs
index a75740f..8719cc4 100644
--- a/src/Data/MIME/Types.hs
+++ b/src/Data/MIME/Types.hs
@@ -45,7 +45,7 @@ module Data.MIME.Types (-- * Creating Lookup Objects
 where
 
 import qualified Data.Map as Map
-import Monad
+import Control.Monad
 import System.IO
 import System.IO.Error
 import System.IO.Utils

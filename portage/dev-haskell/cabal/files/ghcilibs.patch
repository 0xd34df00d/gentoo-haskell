Wed Jul 27 12:58:38 CEST 2005  der_eq@freenet.de
  * Fixing install bug(GHCi lib overwrites .a archive)
Tue Jul 26 03:07:38 CEST 2005  Duncan Coutts <duncan.coutts@worc.ox.ac.uk>
  * Move building of GHCi .o libs to the build phase rather than register phase.
diff -rN -Naur old-cabal/cabal/Distribution/Setup.hs new-cabal/cabal/Distribution/Setup.hs
--- old-cabal/cabal/Distribution/Setup.hs	2005-07-27 13:32:08.000000000 +0200
+++ new-cabal/cabal/Distribution/Setup.hs	2005-07-27 12:44:33.000000000 +0200
@@ -106,7 +106,8 @@
         configProfExe  :: Bool,           -- ^Enable profiling in the executables.
         configPrefix   :: Maybe FilePath, -- ^installation prefix
         configVerbose  :: Int,            -- ^verbosity level
-	configUser     :: Bool		  -- ^--user flag?
+	configUser     :: Bool,		  -- ^--user flag?
+	configGHCiLib  :: Bool            -- ^Enable compiling library for GHCi
     }
     deriving (Show, Eq)
 
@@ -126,7 +127,8 @@
         configGreencard= Nothing,
         configPrefix   = Nothing,
         configVerbose  = 0,
-	configUser     = False
+	configUser     = False,
+	configGHCiLib  = True
     }
 
 -- |Most of these flags are for Configure, but InstPrefix is for Copy.
@@ -137,6 +139,7 @@
           | WithGreencard FilePath
           | WithProfLib | WithoutProfLib
           | WithProfExe | WithoutProfExe
+	  | WithGHCiLib | WithoutGHCiLib
           -- For install, register, and unregister:
           | UserFlag | GlobalFlag
           -- for register & unregister
@@ -267,6 +270,10 @@
                "Enable executable profiling",
            Option "" ["disable-executable-profiling"] (NoArg WithoutProfExe)
                "Disable executable profiling",
+	   Option "" ["enable-library-for-ghci"] (NoArg WithGHCiLib)
+               "compile library for use with GHCi",
+	   Option "" ["disable-library-for-ghci"] (NoArg WithoutGHCiLib)
+               "do not compile libraries for GHCi",
            Option "" ["user"] (NoArg UserFlag)
                "allow dependencies to be satisfied from the user package database",
            Option "" ["global"] (NoArg GlobalFlag)
@@ -294,6 +301,8 @@
         updateCfg t WithoutProfLib       = t { configProfLib  = False }
         updateCfg t WithProfExe          = t { configProfExe  = True }
         updateCfg t WithoutProfExe       = t { configProfExe  = False }
+	updateCfg t WithGHCiLib          = t { configGHCiLib  = True }
+	updateCfg t WithoutGHCiLib       = t { configGHCiLib  = False }
         updateCfg t (Prefix path)        = t { configPrefix   = Just path }
         updateCfg t (Verbose n)          = t { configVerbose  = n }
         updateCfg t UserFlag             = t { configUser     = True }
diff -rN -Naur old-cabal/cabal/Distribution/Simple/Build.hs new-cabal/cabal/Distribution/Simple/Build.hs
--- old-cabal/cabal/Distribution/Simple/Build.hs	2005-07-27 13:32:08.000000000 +0200
+++ new-cabal/cabal/Distribution/Simple/Build.hs	2005-07-27 12:44:33.000000000 +0200
@@ -59,7 +59,7 @@
 import Distribution.Simple.Configure (LocalBuildInfo(..))
 import Distribution.Simple.Install (hugsMainFilename)
 import Distribution.Simple.Utils (rawSystemExit, die, rawSystemPathExit,
-                                  mkLibName, mkProfLibName, dotToSep,
+                                  mkLibName, mkProfLibName, mkGHCiLibName, dotToSep,
 				  moduleToFilePath,
                                   smartCopySources,
                                   findFile
@@ -131,6 +131,7 @@
   let pref = buildDir lbi
   let ghcPath = compilerPath (compiler lbi)
       ifProfLib = when (withProfLib lbi)
+      ifGHCiLib = when (withGHCiLib lbi)
   pkgConf <- GHC.localPackageConfig
   pkgConfReadable <- GHC.canReadLocalPackageConfig
   -- Build lib
@@ -185,6 +186,7 @@
           hProfObjs = [ (dotToSep x) `joinFileExt` "p_"++objExtension
                       | x <- libModules pkg_descr ]
           profLibName  = mkProfLibName pref (showPackageId (package pkg_descr))
+	  ghciLibName = mkGHCiLibName pref (showPackageId (package pkg_descr))
 
       stubObjs <- sequence [moduleToFilePath [libTargetDir] (x ++"_stub") [objExtension]
                            |  x <- libModules pkg_descr ]  >>= return . concat
@@ -192,6 +194,7 @@
       unless (null hObjs && null cObjs && null stubObjs) $ do
         try (removeFile libName) -- first remove library if it exists
         try (removeFile profLibName) -- first remove library if it exists
+	try (removeFile ghciLibName) -- first remove library if it exists
         let arArgs = ["q"++ (if verbose > 4 then "v" else "")]
                 ++ [libName]
                 ++ [pref `joinFileName` x | x <- hObjs ++ cObjs]
@@ -200,8 +203,14 @@
                 ++ [profLibName]
                 ++ [pref `joinFileName` x | x <- hProfObjs ++ cObjs]
                 ++ stubObjs
+	    ldArgs = ["-r"]
+                ++ ["-x"] -- FIXME: only some systems's ld support the "-x" flag
+	        ++ ["-o", ghciLibName]
+		++ [pref `joinFileName` x | x <- hObjs ++ cObjs]
+		++ stubObjs
         rawSystemPathExit verbose "ar" arArgs
         ifProfLib (rawSystemPathExit verbose "ar" arProfArgs)
+	ifGHCiLib (rawSystemPathExit verbose "ld" ldArgs)
 
   -- build any executables
   withExe pkg_descr $ \ (Executable exeName' modPath exeBi) -> do
diff -rN -Naur old-cabal/cabal/Distribution/Simple/Configure.hs new-cabal/cabal/Distribution/Simple/Configure.hs
--- old-cabal/cabal/Distribution/Simple/Configure.hs	2005-07-27 13:32:08.000000000 +0200
+++ new-cabal/cabal/Distribution/Simple/Configure.hs	2005-07-27 12:44:33.000000000 +0200
@@ -174,7 +174,8 @@
                               withCpphs=cpphs,
                               withGreencard=greencard,
                               withProfLib=configProfLib cfg,
-                              withProfExe=configProfExe cfg
+                              withProfExe=configProfExe cfg,
+			      withGHCiLib=configGHCiLib cfg
                              }
 
 -- |Converts build dependencies to a versioned dependency.  only sets
diff -rN -Naur old-cabal/cabal/Distribution/Simple/Install.hs new-cabal/cabal/Distribution/Simple/Install.hs
--- old-cabal/cabal/Distribution/Simple/Install.hs	2005-07-27 13:32:08.000000000 +0200
+++ new-cabal/cabal/Distribution/Simple/Install.hs	2005-07-27 12:48:16.000000000 +0200
@@ -67,7 +67,7 @@
 import Distribution.Package (showPackageId, PackageIdentifier(pkgName))
 import Distribution.Simple.LocalBuildInfo(LocalBuildInfo(..))
 import Distribution.Simple.Utils(smartCopySources, copyFileVerbose, mkLibName,
-                                 mkProfLibName, die, rawSystemVerbose)
+                                 mkProfLibName, mkGHCiLibName, die, rawSystemVerbose)
 import Distribution.Compiler (CompilerFlavor(..), Compiler(..), showCompilerId)
 
 import Control.Monad(when)
@@ -95,7 +95,7 @@
   let binPref = mkBinDir pkg_descr lbi install_prefixM
   setupMessage ("Installing: " ++ libPref ++ " & " ++ binPref) pkg_descr
   case compilerFlavor (compiler lbi) of
-     GHC  -> do when (hasLibs pkg_descr) (installLibGHC verbose (withProfLib lbi) libPref buildPref pkg_descr)
+     GHC  -> do when (hasLibs pkg_descr) (installLibGHC verbose (withProfLib lbi) (withGHCiLib lbi) libPref buildPref pkg_descr)
                 installExeGhc verbose binPref buildPref pkg_descr
      Hugs -> installHugs verbose libPref binPref targetLibPref buildPref pkg_descr
      _    -> die ("only installing with GHC or Hugs is implemented")
@@ -113,20 +113,23 @@
              let exeName = e `joinFileExt` exeExtension
              copyFileVerbose verbose (buildPref `joinFileName` e `joinFileName` exeName) (pref `joinFileName` exeName)
 
--- |Install for ghc, .hi and .a
+-- |Install for ghc, .hi, .a and, if --with-ghci given, .o
 installLibGHC :: Int      -- ^verbose
               -> Bool     -- ^has profiling library
+	      -> Bool     -- ^has GHCi libs
               -> FilePath -- ^install location
               -> FilePath -- ^Build location
               -> PackageDescription -> IO ()
-installLibGHC verbose hasProf pref buildPref pd@PackageDescription{library=Just l,
+installLibGHC verbose hasProf hasGHCi pref buildPref pd@PackageDescription{library=Just l,
                                                    package=p}
     = do smartCopySources verbose [buildPref] pref (libModules pd) ["hi"] True
          ifProf $ smartCopySources verbose [buildPref] pref (libModules pd) ["p_hi"] True
          let libTargetLoc = mkLibName pref (showPackageId p)
              profLibTargetLoc = mkProfLibName pref (showPackageId p)
+	     libGHCiTargetLoc = mkGHCiLibName pref (showPackageId p)
          copyFileVerbose verbose (mkLibName buildPref (showPackageId p)) libTargetLoc
          ifProf $ copyFileVerbose verbose (mkProfLibName buildPref (showPackageId p)) profLibTargetLoc
+	 ifGHCi $ copyFileVerbose verbose (mkGHCiLibName buildPref (showPackageId p)) libGHCiTargetLoc
 
          -- use ranlib or ar -s to build an index. this is necessary
          -- on some systems like MacOS X.  If we can't find those,
@@ -143,7 +146,8 @@
                                           ifProf $ rawSystemVerbose verbose "ar" ["-s", profLibTargetLoc]
                                           return ()
     where ifProf action = when hasProf (action >> return ())
-installLibGHC _ _ _ _ PackageDescription{library=Nothing}
+	  ifGHCi action = when hasGHCi (action >> return ())
+installLibGHC _ _ _ _ _ PackageDescription{library=Nothing}
     = die $ "Internal Error. installLibGHC called with no library."
 
 -- Install for Hugs
diff -rN -Naur old-cabal/cabal/Distribution/Simple/LocalBuildInfo.hs new-cabal/cabal/Distribution/Simple/LocalBuildInfo.hs
--- old-cabal/cabal/Distribution/Simple/LocalBuildInfo.hs	2005-07-27 13:32:08.000000000 +0200
+++ new-cabal/cabal/Distribution/Simple/LocalBuildInfo.hs	2005-07-27 12:44:33.000000000 +0200
@@ -69,7 +69,8 @@
         withCpphs     :: Maybe FilePath, -- ^Might be the location of the Cpphs executable.
         withGreencard :: Maybe FilePath, -- ^Might be the location of the GreenCard executable.
         withProfLib   :: Bool,
-        withProfExe   :: Bool
+        withProfExe   :: Bool,
+	withGHCiLib   :: Bool
   }
   deriving (Show, Read, Eq)
 
diff -rN -Naur old-cabal/cabal/Distribution/Simple/Register.hs new-cabal/cabal/Distribution/Simple/Register.hs
--- old-cabal/cabal/Distribution/Simple/Register.hs	2005-07-27 13:32:08.000000000 +0200
+++ new-cabal/cabal/Distribution/Simple/Register.hs	2005-07-27 12:44:33.000000000 +0200
@@ -167,9 +167,8 @@
 #endif
                                       ["--input-file="++installedPkgConfigFile]
         
-	let allFlags = "--auto-ghci-libs":
-		       (register_flags
-                        ++ config_flags)
+	let allFlags = register_flags
+                       ++ config_flags
                        ++ if ghc_63_plus && genScript then ["-"] else []
         let pkgTool = compilerPkgTool (compiler lbi)
 
diff -rN -Naur old-cabal/cabal/Distribution/Simple/Utils.hs new-cabal/cabal/Distribution/Simple/Utils.hs
--- old-cabal/cabal/Distribution/Simple/Utils.hs	2005-07-27 13:32:08.000000000 +0200
+++ new-cabal/cabal/Distribution/Simple/Utils.hs	2005-07-27 12:44:33.000000000 +0200
@@ -56,6 +56,7 @@
         moduleToFilePath,
         mkLibName,
         mkProfLibName,
+	mkGHCiLibName,
         currentDir,
         dotToSep,
 	withTempFile,
@@ -273,6 +274,11 @@
               -> String
 mkProfLibName pref lib = mkLibName pref (lib++"_p")
 
+mkGHCiLibName :: FilePath -- ^file Prefix
+              -> String   -- ^library name.
+              -> String
+mkGHCiLibName pref lib = pref `joinFileName` ("HS" ++ lib ++ ".o")
+
 -- -----------------------------------------------------------------------------
 -- * temporary file names
 -- -----------------------------------------------------------------------------


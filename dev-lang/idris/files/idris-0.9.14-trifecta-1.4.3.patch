diff --git a/src/Idris/AbsSyntaxTree.hs b/src/Idris/AbsSyntaxTree.hs
index a3442ea..d09725d 100644
--- a/src/Idris/AbsSyntaxTree.hs
+++ b/src/Idris/AbsSyntaxTree.hs
@@ -124,6 +124,7 @@ data OutputMode = RawOutput | IdeSlave Integer deriving Show
 data ConsoleWidth = InfinitelyWide -- ^ Have pretty-printer assume that lines should not be broken
                   | ColsWide Int -- ^ Manually specified - must be positive
                   | AutomaticWidth -- ^ Attempt to determine width, or 80 otherwise
+    deriving Show
 
 -- | The global state used in the Idris monad
 data IState = IState {
@@ -192,7 +193,7 @@ data IState = IState {
     idris_postulates :: S.Set Name,
     idris_whocalls :: Maybe (M.Map Name [Name]),
     idris_callswho :: Maybe (M.Map Name [Name])
-   }
+   } deriving Show
 
 data SizeChange = Smaller | Same | Bigger | Unknown
     deriving (Show, Eq)
diff --git a/src/Util/DynamicLinker.hs b/src/Util/DynamicLinker.hs
index 9dcee39..dd74a71 100644
--- a/src/Util/DynamicLinker.hs
+++ b/src/Util/DynamicLinker.hs
@@ -42,7 +42,7 @@ data ForeignFun = forall a. Fun { fun_name :: String
 
 data DynamicLib = Lib { lib_name :: String
                       , lib_handle :: DL
-                      }
+                      } deriving Show
 
 instance Eq DynamicLib where
     (Lib a _) == (Lib b _) = a == b
@@ -98,7 +98,7 @@ tryLoadFn fn (Lib _ h) = do cFn <- getProcAddress h fn
 data DynamicLib = Lib { lib_name :: String
                       , lib_handle :: ()
                       }
-    deriving Eq
+    deriving (Eq, Show)
 
 data ForeignFun = forall a. Fun { fun_name :: String
                                 , fun_handle :: ()

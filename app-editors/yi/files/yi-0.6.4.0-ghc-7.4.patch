--- yi-0.6.4.0-orig/yi.cabal	2011-07-21 17:50:13.000000000 +1000
+++ yi-0.6.4.0/yi.cabal	2012-01-20 01:42:35.810153715 +1100
@@ -193,21 +193,21 @@
     Parser.Incremental
 
   build-depends:
-    Cabal >= 1.10 && < 1.11,
+    Cabal >= 1.10 && < 1.15,
     Diff >=0.1 && <0.2,
     array, containers,  directory, process, old-locale,
     base >=4 && <5,
     binary == 0.5.*,
-    bytestring >=0.9.1 && <0.9.2,
+    bytestring >=0.9.1 && <0.9.3,
     cautious-file == 1.0.*,
     concrete-typerep == 0.1.*,
-    derive >=2.4 && <2.5,
+    derive >=2.4 && <2.6,
     data-accessor >= 0.2.1.4 && < 0.3,
     data-accessor-monads-fd == 0.2.*,
     data-accessor-template >= 0.2.1.3 && < 0.2.2,
     dlist >=0.4.1,
     dyre >=0.7,
-    filepath>=1.1 && <1.3,
+    filepath>=1.1 && <1.4,
     fingertree >= 0 && <0.1,
     ghc-paths ==0.1.*,
     hashable < 1.2,
@@ -218,13 +218,13 @@
     random,
     regex-base ==0.93.*,
     regex-tdfa == 1.1.*,
-    rosezipper >= 0.1 && < 0.2,
+    rosezipper >= 0.1 && < 0.3,
     split == 0.1.*,
-    template-haskell >= 2.4 && < 2.6,
-    time >= 1.1 && < 1.3,
+    template-haskell >= 2.4 && < 2.8,
+    time >= 1.1 && < 1.5,
     utf8-string >= 0.3.1,
     uniplate,
-    unix-compat >=0.1 && <0.3,
+    unix-compat >=0.1 && <0.4,
     unordered-containers >= 0.1.3 && < 0.2
 
   build-tools: alex
@@ -232,6 +232,9 @@
   if flag(hacking)
     ghc-prof-options: -prof -auto-all
 
+  if impl(ghc >=7.2)
+     extensions: NondecreasingIndentation
+
   if !os(windows)
     build-depends:
       unix
@@ -289,7 +292,7 @@
     exposed-modules:
       Yi.UI.Vty
     build-depends:
-      unix-compat >=0.1 && <0.3,
+      unix-compat >=0.1 && <0.4,
       vty >=4.0.0 && <5
     cpp-options: -DFRONTEND_VTY
 
@@ -348,7 +351,7 @@
     array,
     containers,
     directory,
-    filepath>=1.1 && <1.3
+    filepath>=1.1 && <1.4
   if !flag(dochack)
     build-depends: yi
 
--- yi-0.6.4.0-orig/src/library/Yi/Syntax/Paren.hs	2011-07-21 17:50:13.000000000 +1000
+++ yi-0.6.4.0/src/library/Yi/Syntax/Paren.hs	2012-02-07 22:06:31.430468060 +1100
@@ -12,7 +12,7 @@
 import Yi.Syntax
 import Yi.Prelude 
 import Prelude ()
-import Data.Monoid
+import Data.Monoid (Endo(..), appEndo, mappend)
 import Data.DeriveTH
 import Data.Maybe
 import Data.List (filter, takeWhile)
--- yi-0.6.4.0-orig/src/library/Yi/Syntax/Strokes/Haskell.hs	2011-07-21 17:50:13.000000000 +1000
+++ yi-0.6.4.0/src/library/Yi/Syntax/Strokes/Haskell.hs	2012-02-07 22:03:56.617497281 +1100
@@ -10,7 +10,7 @@
 import Yi.Syntax
 import Yi.Prelude
 import Prelude ()
-import Data.Monoid
+import Data.Monoid (Endo(..), appEndo, mappend)
 import Yi.Syntax.Haskell
 import Yi.Syntax.Tree (subtrees)
 
--- yi-0.6.4.0-orig/src/library/Yi/Syntax/Latex.hs	2011-07-21 17:50:13.000000000 +1000
+++ yi-0.6.4.0/src/library/Yi/Syntax/Latex.hs	2012-02-07 22:01:15.535394445 +1100
@@ -11,7 +11,7 @@
 import Yi.Syntax
 import Yi.Prelude 
 import Prelude ()
-import Data.Monoid
+import Data.Monoid (Endo(..), mappend, mempty)
 import Data.List (zip)
 
 
--- yi-0.6.4.0-orig/src/library/Yi/Syntax/OnlineTree.hs	2011-07-21 17:50:13.000000000 +1000
+++ yi-0.6.4.0/src/library/Yi/Syntax/OnlineTree.hs	2012-02-07 21:58:19.132021403 +1100
@@ -7,7 +7,7 @@
 import Control.Applicative
 import Data.Traversable
 import Data.Foldable
-import Data.Monoid
+import Data.Monoid (mempty)
 
 #ifdef TESTING
 import Test.QuickCheck 
--- yi-0.6.4.0-orig/src/library/Yi/Prelude.hs	2011-07-21 17:50:13.000000000 +1000
+++ yi-0.6.4.0/src/library/Yi/Prelude.hs	2012-02-07 21:56:47.490279681 +1100
@@ -99,7 +99,7 @@
 import Control.Applicative hiding((<$))
 import Data.Traversable 
 import Data.Typeable
-import Data.Monoid
+import Data.Monoid (Monoid, mappend)
 import qualified Data.Set as Set
 import qualified Data.Map as Map
 import qualified Control.Monad.State.Class as CMSC
--- yi-0.6.4.0-orig/src/library/Yi/Syntax/Tree.hs	2011-07-21 17:50:13.000000000 +1000
+++ yi-0.6.4.0/src/library/Yi/Syntax/Tree.hs	2012-02-07 22:20:42.214973350 +1100
@@ -22,7 +22,7 @@
 import Control.Arrow (first)
 import Data.List (dropWhile, takeWhile, reverse, filter, zip, take, drop, length, splitAt)
 import Data.Maybe
-import Data.Monoid
+import Data.Monoid (First(..), Last(..), getFirst, getLast, mempty)
 #ifdef TESTING
 import Test.QuickCheck
 #endif
